const schemaQueries = [
            `CREATE TABLE IF NOT EXISTS households (
                household_id SERIAL PRIMARY KEY,
                address TEXT NOT NULL,
                pin_password TEXT NOT NULL
            )`,
            `CREATE TABLE IF NOT EXISTS users (
                user_id SERIAL PRIMARY KEY,
                household_id INT REFERENCES households(household_id) ON DELETE CASCADE,
                first_name TEXT NOT NULL,
                last_name TEXT NOT NULL,
                email TEXT UNIQUE NOT NULL,
                password_hash TEXT NOT NULL,
                pin_password TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                is_blocked BOOLEAN DEFAULT FALSE,
                balance NUMERIC(10, 2) DEFAULT 0
            )`,
            `CREATE TABLE IF NOT EXISTS supermarkets (
                supermarket_id SERIAL PRIMARY KEY,
                name VARCHAR(100) NOT NULL,
                description TEXT,
                rating NUMERIC(3, 2),
                image_url TEXT
            )`,
            `CREATE TABLE IF NOT EXISTS categories (
                category_id SERIAL PRIMARY KEY,
                supermarket_id INT REFERENCES supermarkets(supermarket_id) ON DELETE CASCADE,
                name VARCHAR(100) NOT NULL,
                UNIQUE (supermarket_id, name)
            )`,
            `CREATE TABLE IF NOT EXISTS products (
                product_id SERIAL PRIMARY KEY,
                name VARCHAR(100) NOT NULL,
                description TEXT,
                price NUMERIC(10, 2) NOT NULL,
                category_id INT REFERENCES categories(category_id) ON DELETE CASCADE,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )`,
            `CREATE TABLE IF NOT EXISTS orders (
                order_id SERIAL PRIMARY KEY,
                household_id INT REFERENCES households(household_id) ON DELETE CASCADE,
                user_id INT REFERENCES users(user_id) ON DELETE SET NULL,
                is_shared BOOLEAN DEFAULT FALSE,
                total_cost NUMERIC(10, 2),
                delivery_fee NUMERIC(10, 2),
                service_fee NUMERIC(10, 2),
                status VARCHAR(20) DEFAULT 'Pending',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                delivery_date DATE NOT NULL,
                tax NUMERIC(10, 2) DEFAULT 0
            )`,
            `CREATE TABLE IF NOT EXISTS order_items (
                item_id SERIAL PRIMARY KEY,
                order_id INT REFERENCES orders(order_id) ON DELETE CASCADE,
                product_id INT REFERENCES products(product_id) ON DELETE CASCADE,
                user_id INT REFERENCES users(user_id) ON DELETE SET NULL,
                quantity INT NOT NULL,
                unit_price NUMERIC(10, 2) NOT NULL,
                subtotal NUMERIC(10, 2) NOT NULL,
                delivery_fee_share NUMERIC(10, 2),
                service_fee_share NUMERIC(10, 2),
                user_total NUMERIC(10, 2)
            )`,
            `CREATE TABLE IF NOT EXISTS payments (
                payment_id SERIAL PRIMARY KEY,
                order_id INT REFERENCES orders(order_id) ON DELETE CASCADE,
                user_id INT REFERENCES users(user_id) ON DELETE SET NULL,
                amount NUMERIC(10, 2) NOT NULL,
                status VARCHAR(20) DEFAULT 'Pending',
                transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )`
        ];