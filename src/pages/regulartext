app.post("/api/household-orders", async (req, res) => {
    const { householdId } = req.body;

    if (!householdId) {
        return res.status(400).json({ error: "Household ID is required." });
    }

    try {
        const ordersResult = await pool.query(
            `SELECT * FROM orders WHERE household_id = $1`,
            [householdId]
        );

        const orders = ordersResult.rows;

        // Fetch associated users and items for each order
        const detailedOrders = await Promise.all(orders.map(async (order) => {
            const usersResult = await pool.query(
                `SELECT u.user_id, u.first_name, u.last_name
                 FROM users u
                 JOIN order_items oi ON u.user_id = oi.user_id
                 WHERE oi.order_id = $1`,
                [order.order_id]
            );

            const users = usersResult.rows;

            const detailedUsers = await Promise.all(users.map(async (user) => {
                const itemsResult = await pool.query(
                    `SELECT p.product_name, oi.quantity, oi.unit_price, oi.delivery_fee_share, oi.service_fee_share, oi.tax_share, oi.user_total
                     FROM order_items oi
                     JOIN products p ON oi.product_id = p.product_id
                     WHERE oi.order_id = $1 AND oi.user_id = $2`,
                    [order.order_id, user.user_id]
                );

                const items = itemsResult.rows;

                return { ...user, items };
            }));

            return { ...order, users: detailedUsers };
        }));

        res.json({ orders: detailedOrders });
    } catch (error) {
        console.error("Error fetching household orders:", error);
        res.status(500).json({ error: "Failed to fetch household orders." });
    }
});